---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ithorgrim.
--- DateTime: 19/03/2022 00:54
---
local Paragon = require("paragon")
      Paragon.ServerInformations = {
         quest_informations = {},
         creature_informations = {},
         spells_informations = {}
      }

--[[

    Technical Function

]]--

local function GTP_Creature()
    Paragon.ServerInformations.creature_informations = {}

    local GetCreature = WorldDBQuery("SELECT * FROM "..Paragon.Config.Database..".paragon_creature")
    if (not GetCreature) then
        return false
    end

    repeat
        local cId, cExp = GetCreature:GetUInt32(0), GetCreature:GetUInt32(1)

        if (not cExp or cExp < 0) then
            cExp = Paragon.Config.UniversaleCreatureExp
        end

        Paragon.ServerInformations.creature_informations[cId] = cExp
    until not GetCreature:NextRow()
end

local function GTP_Quest()
    Paragon.ServerInformations.quest_informations = {}

    local GetQuest = WorldDBQuery("SELECT * FROM "..Paragon.Config.Database..".paragon_quest")
    if (not GetQuest) then
        return false
    end

    repeat
        local qId, qExp = GetQuest:GetUInt32(0), GetQuest:GetUInt32(1)

        if (not qExp or qExp < 0) then
            qExp = Paragon.Config.UniversaleQuestExp
        end

        Paragon.ServerInformations.quest_informations[qId] = qExp
    until not GetQuest:NextRow()
end

local function GTP_Spell()
    Paragon.ServerInformations.spells_informations = {}

    local GetSpell = WorldDBQuery("SELECT * FROM "..Paragon.Config.Database..".paragon_spell")
    if (not GetSpell) then
        return false
    end

    repeat
        local sId, sName, sMinVal, sMaxVal = GetSpell:GetUInt32(0), GetSpell:GetString(1), GetSpell:GetUInt32(2), GetSpell:GetUInt32(3)

        if (not sName) then sName = tostring(sId) end
        if (not sMaxVal or sMaxVal > 255 or sMaxVal < 0) then sMaxVal = 255 end
        if (not sMinVal or sMinVal > 255 or sMinVal < 0) then sMinVal = 0 end
        if (not sMaxVal or sMaxVal > 255 or sMaxVal < 0 or sMaxVal > Paragon.Config.MaxSpellPoints) then sMaxVal = 255 end

        Paragon.ServerInformations.spells_informations[sId] = { spellname = sName, minval = sMinVal, maxval = sMaxVal }
    until not GetSpell:NextRow()
end

local function GetTechnicalParagonInformations(event)
    GTP_Spell()

    if (Paragon.Config.QuestGiveExp) then GTP_Quest() end
end
RegisterServerEvent(33, GetTechnicalParagonInformations)